# Cursor Rules - Mailserver Project

## Estrutura do EasyPanel
- Diretório base: `/etc/easypanel/projects/tonetdev/mailserver`
- Container ID padrão: buscar com `docker ps -a | grep mail`
- Nome do container: `tonetdev_mailserver.1.{hash}`
- Imagem: `easypanel/tonetdev/mailserver:latest`
- Volumes persistentes em: `/etc/easypanel/projects/tonetdev/mailserver/volumes`

## Comandos Úteis no Servidor
1. **Verificação de Status:**
   ```bash
   docker ps -a | grep mail
   docker exec [CONTAINER_ID] setup email list
   docker logs [CONTAINER_ID] --tail 100
   ```

2. **Gerenciamento de Emails:**
   ```bash
   docker exec [CONTAINER_ID] setup email add [EMAIL] [PASSWORD]
   docker exec [CONTAINER_ID] setup email list
   docker exec [CONTAINER_ID] setup email del [EMAIL]
   ```

3. **Verificação de Logs:**
   ```bash
   docker logs [CONTAINER_ID] --tail 100
   docker exec [CONTAINER_ID] cat /var/log/mail/mail.log
   ```

## Portas e Serviços
- SMTP (25): Recebimento de emails
- SMTP-SSL (465): Envio seguro legado
- SMTP-TLS (587): Envio seguro moderno
- IMAP-SSL (993): Leitura segura

## Tarefas Realizadas
- Configuração inicial do projeto
- Configuração do docker-compose.yml
- Configuração do ambiente com variáveis (.env)
- Configuração do GitHub Actions para deploy
- Configuração do Postfix e Dovecot
- Organização e limpeza dos scripts de configuração
- Melhorias na configuração SSL
- Adicionado suporte a verificação DNS completa
- Atualização do script setup.sh para configuração local
- Implementação de geração automática de certificados SSL
- Ajuste do docker-compose.yml para EasyPanel
- Otimização do Dockerfile para deploy
- Configuração de volumes persistentes para dados do mailserver
- Correção das permissões de diretórios
- Configuração do volume maildata para persistência
- Remoção do Roundcube e otimização para clientes externos
- Criação do guia de configuração para clientes de email

## Scripts do Projeto
1. setup.sh: Script principal de configuração
   - Configuração inicial do ambiente local
   - Geração de certificados SSL iniciais
   - Criação da estrutura de diretórios
   - Preparação para deploy

2. ssl-setup.sh: Gerenciamento de SSL
   - Geração de certificados auto-assinados
   - Configuração de CA
   - Gerenciamento de permissões

3. verificacao-dns.sh: Verificação DNS
   - Validação de registros A, MX
   - Verificação de SPF, DMARC, DKIM
   - Sugestões de configuração

4. check-config.sh: Validação de Configuração
   - Verificação do docker-compose
   - Validação do Postfix
   - Validação do Dovecot

5. entrypoint.sh: Script de Inicialização
   - Debug de hostname/domainname
   - Inicialização do mailserver
   - Geração de certificados de emergência

## Problemas Encontrados e Resolvidos
- Erro no deploy inicial usando Nixpacks (resolvido)
- Erro fatal de hostname/domainname não configurado (resolvido)
- Problemas com certificados SSL (resolvido)
- Duplicidade de scripts de configuração (resolvido)
- Configuração de hostname/domainname inconsistente (resolvido)
- Path de certificados SSL incorreto (resolvido)
- Necessidade de automatização da configuração local (resolvido)
- Erro no EasyPanel com nome da imagem incorreto (resolvido)
- Ajuste necessário no docker-compose.yml para EasyPanel (resolvido)
- Perda de dados após rebuild (resolvido com volumes persistentes)
- Problemas de permissão em diretórios (resolvido)
- Complexidade desnecessária com Roundcube (resolvido - removido)
- Erro de arquivo main.cf não encontrado (investigar na próxima sessão)

## Progresso Atual
- Scripts organizados e otimizados
- Estrutura de diretórios e arquivos limpa
- Configuração SSL melhorada
- Sistema de verificação DNS robusto
- Setup local automatizado
- Processo de deploy documentado
- Docker-compose.yml otimizado
- Dockerfile otimizado para deploy
- Volumes persistentes configurados
- Permissões de diretórios corrigidas
- Roundcube removido para simplificação
- Guia de configuração para clientes externos criado

## Próximos Passos
1. Investigar erro do arquivo main.cf
2. Verificar logs completos do Postfix
3. Validar configurações SSL
4. Testar envio e recebimento de emails
5. Configurar registros DNS (se necessário)
6. Monitorar logs por 24h
7. Fazer backup das configurações
8. Documentar processo de backup/restore

## Detalhes Relevantes
- Todos os scripts foram revisados e otimizados
- Removidos scripts redundantes
- Padronização de nomes sem acentos
- Melhor organização da documentação
- Processo de deploy automatizado via EasyPanel
- Certificados SSL gerados localmente e no container
- Nome do serviço alterado para 'app' no EasyPanel
- Volumes e networks configurados corretamente
- Dados persistentes configurados com volume maildata
- Permissões de diretórios ajustadas para vmail:vmail

## Informações de Acesso e Segurança
- Servidor: tonet.dev (103.199.186.117)
- Hostname do Mail: mail.tonet.dev
- Conta Principal: luciano@tonet.dev
- Portas Expostas: 25, 465, 587, 993
- SSL/TLS: Configurado e ativo
- Fail2ban: Ativo
- SpamAssassin: Ativo
- ClamAV: Ativo

## Manutenção e Monitoramento
1. **Verificações Diárias:**
   - Status do container
   - Logs de erro
   - Tentativas de acesso suspeitas
   - Uso de disco dos volumes

2. **Verificações Semanais:**
   - Updates de segurança
   - Backup dos volumes
   - Verificação dos certificados SSL
   - Status dos serviços antispam

3. **Verificações Mensais:**
   - Renovação de certificados
   - Limpeza de logs antigos
   - Verificação de blacklists
   - Atualização da imagem base

## Troubleshooting Comum
1. **Container não inicia:**
   - Verificar logs com `docker logs [CONTAINER_ID]`
   - Verificar permissões dos volumes
   - Verificar configurações do SSL

2. **Problemas de Email:**
   - Verificar logs em /var/log/mail/
   - Confirmar status dos serviços (Postfix/Dovecot)
   - Validar configurações DNS

3. **Problemas de SSL:**
   - Verificar validade dos certificados
   - Confirmar permissões dos arquivos
   - Validar configurações do Postfix/Dovecot 